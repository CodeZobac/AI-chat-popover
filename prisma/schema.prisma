// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserSession {
  id                  String   @id @default(cuid())
  sessionId           String   @unique
  ipAddress           String?
  userAgent           String?
  startTime           DateTime @default(now())
  lastActivity        DateTime @updatedAt
  
  messages            Message[]
  schedulingRequests  SchedulingRequest[]
  
  @@map("user_sessions")
}

model Message {
  id          String      @id @default(cuid())
  sessionId   String
  role        String      // "user" or "assistant"
  content     String
  timestamp   DateTime    @default(now())
  metadata    Json?       // For storing intent, confidence, action buttons
  
  session     UserSession @relation(fields: [sessionId], references: [sessionId], onDelete: Cascade)
  
  @@map("messages")
}

model SchedulingRequest {
  id              String   @id @default(cuid())
  sessionId       String
  type            String   // "interview", "tour", "call"
  status          String   @default("pending") // "pending", "confirmed", "completed", "cancelled"
  
  // Contact Information
  contactName     String
  contactEmail    String
  contactPhone    String?
  
  // Preferences
  preferredDate   DateTime?
  timePreference  String?  // "morning", "afternoon", "specific"
  specificTime    String?
  format          String?  // "in-person", "video", "phone"
  programInterest String?
  notes           String?
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  session         UserSession @relation(fields: [sessionId], references: [sessionId], onDelete: Cascade)
  
  @@map("scheduling_requests")
}

model Program {
  id              String   @id @default(cuid())
  name            String
  category        String
  duration        String
  description     String
  requirements    String[] // Array of requirements
  careerOutcomes  String[] // Array of career outcomes
  scheduleFormat  String   // "full-time", "part-time", "evening"
  scheduleDuration String
  isActive        Boolean  @default(true)
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("programs")
}
